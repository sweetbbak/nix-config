# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel" "amdgpu"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/540469cb-8fde-43ca-a1b4-cc2339b4bae2";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/D888-C228";
    fsType = "vfat";
  };

  fileSystems."/home/sweet/hdd" = {
    device = "/dev/disk/by-uuid/9fd4533e-aa5d-42d4-8f47-bdfccc870492";
    fsType = "ext4";
  };

  fileSystems."/home/sweet/sdx" = {
    device = "/dev/disk/by-uuid/12c1a8df-e095-42d9-aca3-7a2a8c124dd8";
    fsType = "ext4";
  };

  fileSystems."/home/sweet/ssd" = {
    device = "/dev/disk/by-uuid/eaf2d99c-5996-47ff-b0d3-b663622f4b5e";
    fsType = "ext4";
    options = ["nofail"];
  };

  fileSystems."/home/sweet/eos" = {
    device = "/dev/disk/by-uuid/9c8d0fde-5902-4cdf-8c97-67a93b031f7e";
    fsType = "ext4";
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
